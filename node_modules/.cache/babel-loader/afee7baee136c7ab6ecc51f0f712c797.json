{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Escritorio\\\\Curso react\\\\cliente\\\\src\\\\components\\\\proyectos\\\\NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n  //obtener el state del formulario , asi podemos utilizar el proyecto state\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    errorformulario,\n    validarFormulario,\n    formulario,\n    mostrarFormulario,\n    agregarProyecto\n  } = proyectosContext; //State para Proyecto\n\n  const [proyecto, guardarProyecto] = useState({\n    nombre: ''\n  }); // Extraer nombre de proyecto\n\n  const {\n    nombre\n  } = proyecto; // Lee los contenidos del input\n\n  const onChangeProyecto = e => {\n    guardarProyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  }; // Cuando el usuario envia un proyecto\n\n\n  const onSubmitProyecto = e => {\n    e.preventDefault(); // Validar el proyecto\n\n    if (nombre === '') {\n      validarFormulario();\n      return;\n    } // agregar al state\n\n\n    agregarProyecto(proyecto); // Reiniciar el form\n\n    guardarProyecto({\n      nombre: ''\n    });\n  }; // Mostrar el formulario\n\n\n  const onClickFormulario = () => {\n    mostrarFormulario();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: onClickFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Nuevo Proyecto\"), formulario ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmitProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Proyecto\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeProyecto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Proyecto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  })) : null, errorformulario ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 32\n    }\n  }, \"El nombre del Proyecto es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/Curso react/cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyectosContext","errorformulario","validarFormulario","formulario","mostrarFormulario","agregarProyecto","proyecto","guardarProyecto","nombre","onChangeProyecto","e","target","name","value","onSubmitProyecto","preventDefault","onClickFormulario"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAmD,OAAnD;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B;AACA,QAAMC,gBAAgB,GAAEH,UAAU,CAACC,eAAD,CAAlC;AACA,QAAM;AAACG,IAAAA,eAAD;AAAiBC,IAAAA,iBAAjB;AAAmCC,IAAAA,UAAnC;AAA8CC,IAAAA,iBAA9C;AAAgEC,IAAAA;AAAhE,MAAkFL,gBAAxF,CAH0B,CAOxB;;AACA,QAAM,CAACM,QAAD,EAAWC,eAAX,IAA8BX,QAAQ,CAAC;AACzCY,IAAAA,MAAM,EAAE;AADiC,GAAD,CAA5C,CARwB,CAYxB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,QAAnB,CAbwB,CAexB;;AACA,QAAMG,gBAAgB,GAAGC,CAAC,IAAI;AAC1BH,IAAAA,eAAe,CAAC,EACZ,GAAGD,QADS;AAEZ,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFf,KAAD,CAAf;AAIH,GALD,CAhBwB,CAuBxB;;;AACA,QAAMC,gBAAgB,GAAGJ,CAAC,IAAI;AAC1BA,IAAAA,CAAC,CAACK,cAAF,GAD0B,CAG1B;;AACA,QAAGP,MAAM,KAAK,EAAd,EAAkB;AACdN,MAAAA,iBAAiB;AACjB;AACH,KAPyB,CAS1B;;;AAEAG,IAAAA,eAAe,CAACC,QAAD,CAAf,CAX0B,CAe1B;;AACAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,MAAM,EAAE;AADI,KAAD,CAAf;AAGH,GAnBD,CAxBwB,CA6CxB;;;AACA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5BZ,IAAAA,iBAAiB;AACpB,GAFD;;AAGA,sBAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,OAAO,EAAGY,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOMb,UAAU,gBAEA;AACI,IAAA,SAAS,EAAC,2BADd;AAEI,IAAA,QAAQ,EAAEW,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,KAAK,EAAEN,MALX;AAMI,IAAA,QAAQ,EAAEC,gBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAaI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,KAAK,EAAC,kBAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAFA,GAsBJ,IA7BZ,EA+BKR,eAAe,gBAAG;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAH,GAA6E,IA/BjG,CAFJ;AAoCH,CArFD;;AAuFA,eAAeF,aAAf","sourcesContent":["import React ,{Fragment, useState, useContext}from 'react';\r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\n\r\nconst NuevoProyecto = () => {\r\n  //obtener el state del formulario , asi podemos utilizar el proyecto state\r\n  const proyectosContext= useContext(proyectoContext);\r\n  const {errorformulario,validarFormulario,formulario,mostrarFormulario,agregarProyecto}= proyectosContext;\r\n\r\n\r\n\r\n    //State para Proyecto\r\n    const [proyecto, guardarProyecto] = useState({\r\n        nombre: ''\r\n    });\r\n\r\n    // Extraer nombre de proyecto\r\n    const { nombre } = proyecto;\r\n\r\n    // Lee los contenidos del input\r\n    const onChangeProyecto = e => {\r\n        guardarProyecto({\r\n            ...proyecto,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    // Cuando el usuario envia un proyecto\r\n    const onSubmitProyecto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar el proyecto\r\n        if(nombre === '') {\r\n            validarFormulario();\r\n            return;\r\n        }\r\n\r\n        // agregar al state\r\n    \r\n        agregarProyecto(proyecto);\r\n\r\n       \r\n\r\n        // Reiniciar el form\r\n        guardarProyecto({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    // Mostrar el formulario\r\n    const onClickFormulario = () => {\r\n        mostrarFormulario();\r\n    }\r\n    return ( \r\n\r\n        <Fragment>\r\n            <button \r\n                type=\"button\"\r\n                className=\"btn btn-block btn-primario\"\r\n                onClick={ onClickFormulario }\r\n            >Nuevo Proyecto</button>\r\n\r\n            { formulario ? \r\n                    (\r\n                        <form\r\n                            className=\"formulario-nuevo-proyecto\"\r\n                            onSubmit={onSubmitProyecto}\r\n                        >\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"input-text\"\r\n                                placeholder=\"Nombre Proyecto\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChangeProyecto}\r\n                            />\r\n\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btn btn-primario btn-block\"\r\n                                value=\"Agregar Proyecto\"\r\n                            />\r\n\r\n                        </form>\r\n                ) : null }\r\n\r\n           { errorformulario ? <p className=\"mensaje error\">El nombre del Proyecto es obligatorio</p>  : null }\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default NuevoProyecto;"]},"metadata":{},"sourceType":"module"}