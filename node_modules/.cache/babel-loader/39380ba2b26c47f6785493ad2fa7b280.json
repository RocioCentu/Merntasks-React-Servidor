{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Escritorio\\\\Curso react\\\\Mern\\\\cliente\\\\src\\\\context\\\\tareas\\\\tareaState.js\";\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axiosCliente';\n\nconst TareaState = props => {\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //crear funciones\n  // Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      console.log(resultado.data);\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //AGREGAR TAREAS\n\n\n  const agregarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      console.log(resultado);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //ERROR\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //ELIMINAR TAREA\n\n\n  const eliminarTarea = tareaid => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: tareaid\n    });\n  }; //cambia el estao de cada tarea\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; // ecxtraer una tarea para edicion\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; // ecxtraer una tarea para edicion\n\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      tareaseleccionada: state.tareaseleccionada,\n      obtenerTareas,\n      validarTarea,\n      agregarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea,\n      errortarea: state.errortarea\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TareaState;","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/Curso react/Mern/cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","console","log","data","type","payload","tareas","error","agregarTarea","tarea","post","validarTarea","eliminarTarea","tareaid","cambiarEstadoTarea","guardarTareaActual","actualizarTarea","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';\r\nimport TareaContext from './tareaContext';\r\nimport TareaReducer from './tareaReducer';\r\nimport {TAREAS_PROYECTO,AGREGAR_TAREA,VALIDAR_TAREA,ELIMINAR_TAREA,ESTADO_TAREA,TAREA_ACTUAL,ACTUALIZAR_TAREA} from '../../types';\r\nimport clienteAxios from '../../config/axiosCliente';\r\n\r\nconst TareaState= props=>{\r\n    const initialState = {\r\n        tareasproyecto:[],\r\n       \r\n        errortarea: false,\r\n        tareaseleccionada: null\r\n    }\r\n\r\n    // Crear dispatch y state\r\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\r\n\r\n    //crear funciones\r\n\r\n    // Obtener las tareas de un proyecto\r\n    const obtenerTareas = async proyecto => {\r\n\r\n       \r\n\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas', { params: { proyecto }});\r\n            console.log(resultado.data);\r\n            dispatch({\r\n                type: TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //AGREGAR TAREAS\r\n    const agregarTarea=async(tarea)=>{\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\r\n            console.log(resultado);\r\n            dispatch({\r\n                type: AGREGAR_TAREA,\r\n                payload: tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //ERROR\r\n    const validarTarea=()=>{\r\n        dispatch({\r\n            type:VALIDAR_TAREA,\r\n           \r\n        })\r\n    }\r\n\r\n    //ELIMINAR TAREA\r\n    const eliminarTarea=(tareaid)=>{\r\n        dispatch({\r\n            type:ELIMINAR_TAREA,\r\n            payload:tareaid\r\n        })\r\n    }\r\n\r\n    //cambia el estao de cada tarea\r\n    const cambiarEstadoTarea=(tarea)=>{\r\n        dispatch({\r\n            type: ESTADO_TAREA,\r\n            payload:tarea\r\n        })\r\n    }\r\n    \r\n    // ecxtraer una tarea para edicion\r\n    const guardarTareaActual= tarea => {\r\n        dispatch({\r\n            type:TAREA_ACTUAL,\r\n            payload:tarea\r\n        })\r\n    }\r\n\r\n    // ecxtraer una tarea para edicion\r\n    const actualizarTarea= tarea => {\r\n        dispatch({\r\n            type:ACTUALIZAR_TAREA,\r\n            payload:tarea\r\n        })\r\n    }\r\nreturn(\r\n    <TareaContext.Provider\r\n    value={{\r\n       \r\n        tareasproyecto:state.tareasproyecto,\r\n        tareaseleccionada:state.tareaseleccionada,\r\n        obtenerTareas,\r\n        validarTarea,\r\n        agregarTarea,\r\n        eliminarTarea,\r\n        cambiarEstadoTarea,\r\n        guardarTareaActual,\r\n        actualizarTarea,\r\n        errortarea:state.errortarea\r\n    }}\r\n   >\r\n        {props.children}\r\n    </TareaContext.Provider>\r\n)\r\n}\r\n\r\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}