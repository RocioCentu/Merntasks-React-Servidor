{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Escritorio\\\\Curso react\\\\Mern\\\\cliente\\\\src\\\\context\\\\proyectos\\\\proyectoState.js\";\nimport React, { useState, useReducer } from 'react';\nimport proyectoContext from './proyectoContext';\nimport proyectoReducer from './proyectoReducer';\nimport { PROYECTO_ERROR, ELIMINAR_PROYECTO, PROYECTO_ACTUAL, VALIDAR_FORMULARIO, AGREGAR_PROYECTO, FORMULARIO_PROYECTO, OBTENER_PROYECTOS } from '../../types';\nimport clienteAxios from '../../config/axiosCliente';\n\nconst ProyectoState = props => {\n  const initialState = {\n    proyectos: [],\n    formulario: false,\n    errorformulario: false,\n    proyecto: null,\n    mensaje: null\n  }; //dispath para ejecutar las acciones\n\n  const [state, dispath] = useReducer(proyectoReducer, initialState); //SERIE DE ACCIONES PARA EL CRUD\n\n  const mostrarFormulario = () => {\n    //funciones que madans a llamar el reducer\n    dispath({\n      //lo que se va a evaluar en el reducer\n      type: FORMULARIO_PROYECTO\n    });\n  }; //obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const respuesta = await clienteAxios.get('/api/proyectos');\n      dispath({\n        type: OBTENER_PROYECTOS,\n        payload: respuesta.data.proyectos\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispath({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const respuesta = await clienteAxios.post('/api/proyectos', proyecto); //agregar el pryecto al staste con un dispath\n\n      dispath({\n        type: AGREGAR_PROYECTO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: 'hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispath({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //VALIDAR FORMULARIO\n\n\n  const validarFormulario = () => {\n    dispath({\n      type: VALIDAR_FORMULARIO\n    });\n  }; //seleeciona proyecto que el usuario dio click\n\n\n  const proyectoActual = async proyectoid => {\n    //   const respuesta = await clienteAxios.post('/api/proyectos', proyecto);\n    dispath({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoid\n    });\n  }; //ELIMINAR PROYECTO\n\n\n  const eliminarProyecto = async proyectoid => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoid}`);\n      dispath({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoid\n      }); // eslint-disable-next-line\n    } catch (error) {\n      const alerta = {\n        msg: 'hubo un error',\n        categoria: 'alerta-error'\n      };\n      dispath({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      }); // eslint-disable-next-line\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(proyectoContext.Provider, {\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      agregarProyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      validarFormulario,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/Curso react/Mern/cliente/src/context/proyectos/proyectoState.js"],"names":["React","useState","useReducer","proyectoContext","proyectoReducer","PROYECTO_ERROR","ELIMINAR_PROYECTO","PROYECTO_ACTUAL","VALIDAR_FORMULARIO","AGREGAR_PROYECTO","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","clienteAxios","ProyectoState","props","initialState","proyectos","formulario","errorformulario","proyecto","mensaje","state","dispath","mostrarFormulario","type","obtenerProyectos","respuesta","get","payload","data","error","alerta","msg","categoria","agregarProyecto","post","validarFormulario","proyectoActual","proyectoid","eliminarProyecto","delete","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA0CC,eAA1C,EAA0DC,kBAA1D,EAA6EC,gBAA7E,EAA8FC,mBAA9F,EAAkHC,iBAAlH,QAA0I,aAA1I;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAGA,MAAMC,aAAa,GAAEC,KAAK,IAAE;AAExB,QAAMC,YAAY,GAAC;AACfC,IAAAA,SAAS,EAAC,EADK;AAEhBC,IAAAA,UAAU,EAAC,KAFK;AAGhBC,IAAAA,eAAe,EAAC,KAHA;AAIhBC,IAAAA,QAAQ,EAAC,IAJO;AAKhBC,IAAAA,OAAO,EAAC;AALQ,GAAnB,CAFwB,CAUxB;;AACA,QAAM,CAACC,KAAD,EAAOC,OAAP,IAAiBpB,UAAU,CAACE,eAAD,EAAiBW,YAAjB,CAAjC,CAXwB,CAaxB;;AACA,QAAMQ,iBAAiB,GAAC,MAAI;AACxB;AACJD,IAAAA,OAAO,CAAC;AACJ;AACAE,MAAAA,IAAI,EAACd;AAFD,KAAD,CAAP;AAIC,GAND,CAdwB,CAqBxB;;;AAEA,QAAMe,gBAAgB,GAAC,YAAS;AAC/B,QAAI;AAED,YAAMC,SAAS,GAAG,MAAMd,YAAY,CAACe,GAAb,CAAiB,gBAAjB,CAAxB;AAEAL,MAAAA,OAAO,CAAC;AAEJE,QAAAA,IAAI,EAACb,iBAFD;AAGJiB,QAAAA,OAAO,EAACF,SAAS,CAACG,IAAV,CAAeb;AAHnB,OAAD,CAAP;AAKF,KATD,CASG,OAAOc,KAAP,EAAc;AAEd,YAAMC,MAAM,GAAC;AACTC,QAAAA,GAAG,EAAC,eADK;AAETC,QAAAA,SAAS,EAAC;AAFD,OAAb;AAIEX,MAAAA,OAAO,CAAC;AACHE,QAAAA,IAAI,EAACnB,cADF;AAEHuB,QAAAA,OAAO,EAACG;AAFL,OAAD,CAAP;AAIH;AACF,GArBD,CAvBwB,CA6CxB;;;AACA,QAAMG,eAAe,GAAC,MAAMf,QAAN,IAAiB;AAGpC,QAAI;AAEH,YAAMO,SAAS,GAAG,MAAMd,YAAY,CAACuB,IAAb,CAAkB,gBAAlB,EAAoChB,QAApC,CAAxB,CAFG,CAIC;;AACJG,MAAAA,OAAO,CAAC;AAEJE,QAAAA,IAAI,EAACf,gBAFD;AAGJmB,QAAAA,OAAO,EAACF,SAAS,CAACG;AAHd,OAAD,CAAP;AAKA,KAVD,CAUE,OAAOC,KAAP,EAAc;AAEd,YAAMC,MAAM,GAAC;AACTC,QAAAA,GAAG,EAAC,eADK;AAETC,QAAAA,SAAS,EAAC;AAFD,OAAb;AAIEX,MAAAA,OAAO,CAAC;AACHE,QAAAA,IAAI,EAACnB,cADF;AAEHuB,QAAAA,OAAO,EAACG;AAFL,OAAD,CAAP;AAIH;AACH,GAxBD,CA9CwB,CAwExB;;;AACA,QAAMK,iBAAiB,GAAC,MAAI;AAGxBd,IAAAA,OAAO,CAAC;AAEJE,MAAAA,IAAI,EAAChB;AAFD,KAAD,CAAP;AAKH,GARD,CAzEwB,CAmFtB;;;AACA,QAAM6B,cAAc,GAAC,MAAMC,UAAN,IAAmB;AAEzC;AAEGhB,IAAAA,OAAO,CAAC;AAEJE,MAAAA,IAAI,EAACjB,eAFD;AAGJqB,MAAAA,OAAO,EAACU;AAHJ,KAAD,CAAP;AAMH,GAVC,CApFsB,CAgGxB;;;AACA,QAAMC,gBAAgB,GAAC,MAAMD,UAAN,IAAmB;AACvC,QAAI;AACA,YAAM1B,YAAY,CAAC4B,MAAb,CAAqB,kBAAiBF,UAAW,EAAjD,CAAN;AAEHhB,MAAAA,OAAO,CAAC;AAEJE,QAAAA,IAAI,EAAClB,iBAFD;AAGJsB,QAAAA,OAAO,EAACU;AAHJ,OAAD,CAAP,CAHG,CASD;AACF,KAVD,CAUG,OAAOR,KAAP,EAAc;AAEhB,YAAMC,MAAM,GAAC;AACTC,QAAAA,GAAG,EAAC,eADK;AAETC,QAAAA,SAAS,EAAC;AAFD,OAAb;AAIEX,MAAAA,OAAO,CAAC;AACHE,QAAAA,IAAI,EAACnB,cADF;AAEHuB,QAAAA,OAAO,EAACG;AAFL,OAAD,CAAP,CANc,CAUZ;AACL;AACF,GAvBD;;AAwBA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACA,IAAA,KAAK,EAAE;AACHf,MAAAA,SAAS,EAACK,KAAK,CAACL,SADb;AAEHC,MAAAA,UAAU,EAAEI,KAAK,CAACJ,UAFf;AAGHC,MAAAA,eAAe,EAACG,KAAK,CAACH,eAHnB;AAIHC,MAAAA,QAAQ,EAACE,KAAK,CAACF,QAJZ;AAKHC,MAAAA,OAAO,EAACC,KAAK,CAACD,OALX;AAMHc,MAAAA,eANG;AAOHX,MAAAA,iBAPG;AAQHE,MAAAA,gBARG;AASHW,MAAAA,iBATG;AAUHC,MAAAA,cAVG;AAWHE,MAAAA;AAXG,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBKzB,KAAK,CAAC2B,QAhBX,CADJ;AAqBH,CA9ID;;AAgJA,eAAe5B,aAAf","sourcesContent":["import React, { useState,useReducer } from 'react';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport {PROYECTO_ERROR, ELIMINAR_PROYECTO,PROYECTO_ACTUAL,VALIDAR_FORMULARIO,AGREGAR_PROYECTO,FORMULARIO_PROYECTO,OBTENER_PROYECTOS} from '../../types';\r\nimport clienteAxios from '../../config/axiosCliente';\r\n\r\n\r\nconst ProyectoState= props=>{\r\n\r\n    const initialState={\r\n        proyectos:[],\r\n       formulario:false,\r\n       errorformulario:false,\r\n       proyecto:null,\r\n       mensaje:null\r\n    }\r\n\r\n    //dispath para ejecutar las acciones\r\n    const [state,dispath]= useReducer(proyectoReducer,initialState);\r\n\r\n    //SERIE DE ACCIONES PARA EL CRUD\r\n    const mostrarFormulario=()=>{\r\n        //funciones que madans a llamar el reducer\r\n    dispath({\r\n        //lo que se va a evaluar en el reducer\r\n        type:FORMULARIO_PROYECTO\r\n    })\r\n    }\r\n    //obtener los proyectos\r\n\r\n    const obtenerProyectos=async()=>{\r\n     try {\r\n\r\n        const respuesta = await clienteAxios.get('/api/proyectos');\r\n\r\n        dispath({\r\n\r\n            type:OBTENER_PROYECTOS,\r\n            payload:respuesta.data.proyectos\r\n        })\r\n     }  catch (error) {\r\n         \r\n        const alerta={\r\n            msg:'hubo un error',\r\n            categoria:'alerta-error'\r\n        }\r\n          dispath({\r\n               type:PROYECTO_ERROR,\r\n               payload:alerta\r\n          })\r\n      }\r\n    }\r\n    //agregar nuevo proyecto\r\n    const agregarProyecto=async(proyecto)=>{\r\n      \r\n\r\n       try {\r\n\r\n        const respuesta = await clienteAxios.post('/api/proyectos', proyecto);\r\n   \r\n            //agregar el pryecto al staste con un dispath\r\n        dispath({\r\n\r\n            type:AGREGAR_PROYECTO,\r\n            payload:respuesta.data\r\n        })\r\n       } catch (error) {\r\n         \r\n         const alerta={\r\n             msg:'hubo un error',\r\n             categoria:'alerta-error'\r\n         }\r\n           dispath({\r\n                type:PROYECTO_ERROR,\r\n                payload:alerta\r\n           })\r\n       }\r\n    }\r\n\r\n    //VALIDAR FORMULARIO\r\n    const validarFormulario=()=>{\r\n      \r\n      \r\n        dispath({\r\n\r\n            type:VALIDAR_FORMULARIO\r\n            \r\n        })\r\n    }\r\n\r\n      //seleeciona proyecto que el usuario dio click\r\n      const proyectoActual=async(proyectoid)=>{\r\n      \r\n     //   const respuesta = await clienteAxios.post('/api/proyectos', proyecto);\r\n   \r\n        dispath({\r\n\r\n            type:PROYECTO_ACTUAL,\r\n            payload:proyectoid\r\n            \r\n        })\r\n    }\r\n\r\n    //ELIMINAR PROYECTO\r\n    const eliminarProyecto=async(proyectoid)=>{\r\n       try {\r\n           await clienteAxios.delete(`/api/proyectos/${proyectoid}`);\r\n           \r\n        dispath({\r\n\r\n            type:ELIMINAR_PROYECTO,\r\n            payload:proyectoid\r\n            \r\n        }) \r\n          // eslint-disable-next-line\r\n       }  catch (error) {\r\n         \r\n        const alerta={\r\n            msg:'hubo un error',\r\n            categoria:'alerta-error'\r\n        }\r\n          dispath({\r\n               type:PROYECTO_ERROR,\r\n               payload:alerta\r\n          })\r\n            // eslint-disable-next-line\r\n      }\r\n    }\r\n    return(\r\n        <proyectoContext.Provider\r\n        value={{\r\n            proyectos:state.proyectos,\r\n            formulario: state.formulario,\r\n            errorformulario:state.errorformulario,\r\n            proyecto:state.proyecto,\r\n            mensaje:state.mensaje,\r\n            agregarProyecto,\r\n            mostrarFormulario,\r\n            obtenerProyectos,\r\n            validarFormulario,\r\n            proyectoActual,\r\n            eliminarProyecto\r\n        }}\r\n        >\r\n  \r\n            {props.children}\r\n        </proyectoContext.Provider>\r\n  \r\n    );\r\n}\r\n\r\nexport default ProyectoState;"]},"metadata":{},"sourceType":"module"}