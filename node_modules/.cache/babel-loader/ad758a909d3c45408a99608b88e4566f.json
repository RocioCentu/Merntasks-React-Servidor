{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\rocio\\\\source\\\\repos\\\\Mern-Cliente\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\rocio\\\\source\\\\repos\\\\Mern-Cliente\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\rocio\\\\source\\\\repos\\\\Mern-Cliente\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import proyectoContext from'../../context/proyectos/proyectoContext';import tareaContext from'../../context/tareas/tareaContext';var FormTarea=function FormTarea(){// Extrar si un proyecto esta activo\nvar proyectosContext=useContext(proyectoContext);var proyecto=proyectosContext.proyecto;// obtener la funci贸n del context de tarea\nvar tareasContext=useContext(tareaContext);var tareaseleccionada=tareasContext.tareaseleccionada,errortarea=tareasContext.errortarea,agregarTarea=tareasContext.agregarTarea,validarTarea=tareasContext.validarTarea,obtenerTareas=tareasContext.obtenerTareas,actualizarTarea=tareasContext.actualizarTarea;// Effect que detecta si hay una tarea seleccionada\nuseEffect(function(){if(tareaseleccionada!==null){guardarTarea(tareaseleccionada);}else{guardarTarea({nombre:''});}},[tareaseleccionada]);// State del formulario\nvar _useState=useState({nombre:''}),_useState2=_slicedToArray(_useState,2),tarea=_useState2[0],guardarTarea=_useState2[1];// extraer el nombre del proyecto\nvar nombre=tarea.nombre;// Si no hay proyecto seleccionado\nif(!proyecto)return null;// Array destructuring para extraer el proyecto actual\nvar _proyecto=_slicedToArray(proyecto,1),proyectoActual=_proyecto[0];// Leer los valores del formulario\nvar handleChange=function handleChange(e){guardarTarea(_objectSpread({},tarea,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();// validar\nif(nombre.trim()===''){validarTarea();return;}// Si es edici贸n o si es nueva tarea\nif(tareaseleccionada===null){// agregar la nueva tarea al state de tareas\ntarea.proyecto=proyectoActual._id;agregarTarea(tarea);}else{// actualizar tarea existente\nactualizarTarea(tarea);}// Obtener y filtrar las tareas del proyecto actual\nobtenerTareas(proyectoActual._id);// reiniciar el form\nguardarTarea({nombre:''});};return/*#__PURE__*/React.createElement(\"div\",{className:\"formulario\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"input-text\",placeholder:\"Nombre Tarea...\",name:\"nombre\",value:nombre,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"contenedor-input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",className:\"btn btn-primario btn-submit btn-block\",value:tareaseleccionada?'Editar Tarea':'Agregar Tarea'}))),errortarea?/*#__PURE__*/React.createElement(\"p\",{className:\"mensaje error\"},\"El nombre de la tarea es obligatorio\"):null);};export default FormTarea;","map":{"version":3,"sources":["C:/Users/rocio/source/repos/Mern-Cliente/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","_id"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';  \r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    // Extrar si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const { proyecto } = proyectosContext;\r\n\r\n    // obtener la funci贸n del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea} = tareasContext;\r\n\r\n    // Effect que detecta si hay una tarea seleccionada\r\n    useEffect(() => {\r\n        if(tareaseleccionada !== null) {\r\n            guardarTarea(tareaseleccionada)\r\n        } else {\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [  tareaseleccionada]); \r\n\r\n    // State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    // extraer el nombre del proyecto\r\n    const { nombre } = tarea;\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] =  proyecto;\r\n\r\n    // Leer los valores del formulario\r\n    const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(nombre.trim() === '' ) {\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n        // Si es edici贸n o si es nueva tarea\r\n        if(tareaseleccionada === null ) {\r\n            // agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            \r\n            agregarTarea(tarea);\r\n        } else {\r\n            // actualizar tarea existente\r\n            actualizarTarea(tarea);\r\n\r\n        }\r\n        // Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual._id);\r\n\r\n        // reiniciar el form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n            {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;\r\n"]},"metadata":{},"sourceType":"module"}