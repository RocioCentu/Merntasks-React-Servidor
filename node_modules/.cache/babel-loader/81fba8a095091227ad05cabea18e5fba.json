{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Escritorio\\\\Curso react\\\\cliente\\\\src\\\\components\\\\tareas\\\\FormTarea.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n  // Extrar si un proyecto esta activo\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext; // State del formulario\n\n  const [tarea, guardarTarea] = useState({\n    nombre: ''\n  }); // extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; // Si no hay proyecto seleccionado\n\n  if (!proyecto) return null; // Array destructuring para extraer el proyecto actual\n\n  const [proyectoActual] = proyecto; // obtener la funci贸n del context de tarea\n\n  const tareasContext = useContext(tareaContext);\n  const {\n    errortarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    tareaseleccionada\n  } = tareasContext; // Effect que detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    obtenerTareas(proyectoActual.id);\n\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaseleccionada, tarea]); // Leer los valores del formulario\n\n  const handleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // validar\n\n    if (nombre.trim() === '') {\n      validarTarea();\n      return;\n    } //agregar tarea\n    // Si es edici贸n o si es nueva tarea\n\n\n    if (tareaseleccionada === null) {\n      // agregar la nueva tarea al state de tareas\n      tarea.proyectoId = proyectoActual.id;\n      tarea.estado = false;\n      agregarTarea(tarea);\n    } else {\n      // actualizar tarea existente\n      actualizarTarea(tarea);\n    } // Obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); // reiniciar el form\n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Tarea...\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-submit btn-block\",\n    value: tareaseleccionada ? \"Editar Tarea\" : \"Agregar Tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }))), errortarea ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }\n  }, \" Coloque el nombre de la tarea\") : null);\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/Curso react/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","proyectoContext","tareaContext","FormTarea","proyectosContext","proyecto","tarea","guardarTarea","nombre","proyectoActual","tareasContext","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","tareaseleccionada","id","handleChange","e","target","name","value","onSubmit","preventDefault","trim","proyectoId","estado"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';  \r\nimport proyectoContext from '../../context/proyectos/proyectoContext';\r\nimport tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    // Extrar si un proyecto esta activo\r\n    const proyectosContext = useContext(proyectoContext);\r\nconst { proyecto } = proyectosContext;\r\n  // State del formulario\r\n  const [tarea, guardarTarea] = useState({\r\n    nombre: ''\r\n})\r\n\r\n    // extraer el nombre del proyecto\r\n    const { nombre } = tarea;\r\n\r\n    // Si no hay proyecto seleccionado\r\n    if(!proyecto) return null;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    const [proyectoActual] =  proyecto;\r\n\r\n    // obtener la funci贸n del context de tarea\r\n    const tareasContext = useContext(tareaContext);\r\n    const {   errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea,tareaseleccionada } = tareasContext;\r\n// Effect que detecta si hay una tarea seleccionada\r\n    useEffect(() => {\r\n        obtenerTareas(proyectoActual.id);\r\n        if(tareaseleccionada !== null) {\r\n            guardarTarea(tareaseleccionada)\r\n        } else {\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [tareaseleccionada,tarea]); \r\n    \r\n\r\n  \r\n\r\n    // Leer los valores del formulario\r\n    const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(nombre.trim() === '' ) {\r\n            validarTarea();\r\n            return;\r\n        }\r\n          //agregar tarea\r\n        \r\n        // Si es edici贸n o si es nueva tarea\r\n       if(tareaseleccionada === null ) {\r\n            // agregar la nueva tarea al state de tareas\r\n            tarea.proyectoId=proyectoActual.id;\r\n\r\n            tarea.estado=false;\r\n           agregarTarea(tarea);\r\n        } else {\r\n            // actualizar tarea existente\r\n            actualizarTarea(tarea);\r\n            \r\n\r\n          \r\n        }\r\n        \r\n\r\n        // Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n        // reiniciar el form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        value={tareaseleccionada ? \"Editar Tarea\" : \"Agregar Tarea\"}\r\n                    />\r\n                </div>\r\n            </form>\r\n       {errortarea ? <p className=\"mensaje\"> Coloque el nombre de la tarea</p>: null}\r\n           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}