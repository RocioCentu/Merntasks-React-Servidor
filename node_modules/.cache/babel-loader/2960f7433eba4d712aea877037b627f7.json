{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rocio\\\\OneDrive\\\\Escritorio\\\\Curso react\\\\cliente\\\\src\\\\components\\\\tareas\\\\FormTarea.js\";\nimport React, { useContext, useState, useEffect } from 'react'; //import proyectoContext from '../../context/proyectos/proyectoContext';\n//import tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n  // Extrar si un proyecto esta activo\n  //const proyectosContext = useContext(proyectoContext);\n  //const { proyecto } = proyectosContext;\n  // obtener la funci贸n del context de tarea\n  //const tareasContext = useContext(tareaContext);\n  //const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n  // Effect que detecta si hay una tarea seleccionada\n\n  /*useEffect(() => {\r\n      if(tareaseleccionada !== null) {\r\n          guardarTarea(tareaseleccionada)\r\n      } else {\r\n          guardarTarea({\r\n              nombre: ''\r\n          })\r\n      }\r\n  }, [  tareaseleccionada]); */\n  // State del formulario\n  const [tarea, guardarTarea] = useState({\n    nombre: ''\n  }); // extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; // Si no hay proyecto seleccionado\n  //if(!proyecto) return null;\n  // Array destructuring para extraer el proyecto actual\n  //const [proyectoActual] =  proyecto;\n  // Leer los valores del formulario\n\n  const handleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // validar\n\n    if (nombre.trim() === '') {\n      //validarTarea();\n      return;\n    } // Si es edici贸n o si es nueva tarea\n\n    /* if(tareaseleccionada === null ) {\r\n         // agregar la nueva tarea al state de tareas\r\n         tarea.proyecto = proyectoActual._id;\r\n         agregarTarea(tarea);\r\n     } else {\r\n         // actualizar tarea existente\r\n         actualizarTarea(tarea);\r\n           // Elimina tareaseleccionada del state\r\n         limpiarTarea();\r\n     }\r\n     // Obtener y filtrar las tareas del proyecto actual\r\n     obtenerTareas(proyectoActual.id);\r\n    */\n    // reiniciar el form\n\n\n    guardarTarea({\n      nombre: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Tarea...\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-submit btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["C:/Users/rocio/OneDrive/Escritorio/Curso react/cliente/src/components/tareas/FormTarea.js"],"names":["React","useContext","useState","useEffect","FormTarea","tarea","guardarTarea","nombre","handleChange","e","target","name","value","onSubmit","preventDefault","trim"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD,C,CACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAEpB;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;;;;;;;;;AAUA;AACA,QAAM,CAACC,KAAD,EAAQC,YAAR,IAAwBJ,QAAQ,CAAC;AACnCK,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAAtC,CAtBoB,CA0BpB;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAaF,KAAnB,CA3BoB,CA6BpB;AACA;AAEA;AACA;AAEA;;AACA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtBH,IAAAA,YAAY,CAAC,EACT,GAAGD,KADM;AAET,OAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFlB,KAAD,CAAZ;AAIH,GALD;;AAOA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AAClBA,IAAAA,CAAC,CAACK,cAAF,GADkB,CAGlB;;AACA,QAAGP,MAAM,CAACQ,IAAP,OAAkB,EAArB,EAA0B;AACtB;AACA;AACH,KAPiB,CASlB;;AACD;;;;;;;;;;;;;AAcC;;;AACAT,IAAAA,YAAY,CAAC;AACTC,MAAAA,MAAM,EAAE;AADC,KAAD,CAAZ;AAGH,GA5BD;;AA8BA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,QAAQ,EAAEM,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,KAAK,EAAEN,MALX;AAMI,IAAA,QAAQ,EAAEC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,eAcI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,uCAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAdJ,CADJ,CADJ;AA4BH,CArGD;;AAuGA,eAAeJ,SAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';  \r\n//import proyectoContext from '../../context/proyectos/proyectoContext';\r\n//import tareaContext from '../../context/tareas/tareaContext';\r\n\r\nconst FormTarea = () => {\r\n\r\n    // Extrar si un proyecto esta activo\r\n    //const proyectosContext = useContext(proyectoContext);\r\n    //const { proyecto } = proyectosContext;\r\n\r\n    // obtener la funci贸n del context de tarea\r\n    //const tareasContext = useContext(tareaContext);\r\n    //const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\r\n\r\n    // Effect que detecta si hay una tarea seleccionada\r\n    /*useEffect(() => {\r\n        if(tareaseleccionada !== null) {\r\n            guardarTarea(tareaseleccionada)\r\n        } else {\r\n            guardarTarea({\r\n                nombre: ''\r\n            })\r\n        }\r\n    }, [  tareaseleccionada]); */\r\n\r\n    // State del formulario\r\n    const [tarea, guardarTarea] = useState({\r\n        nombre: ''\r\n    })\r\n\r\n    // extraer el nombre del proyecto\r\n    const { nombre } = tarea;\r\n\r\n    // Si no hay proyecto seleccionado\r\n    //if(!proyecto) return null;\r\n\r\n    // Array destructuring para extraer el proyecto actual\r\n    //const [proyectoActual] =  proyecto;\r\n\r\n    // Leer los valores del formulario\r\n    const handleChange = e => {\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(nombre.trim() === '' ) {\r\n            //validarTarea();\r\n            return;\r\n        }\r\n\r\n        // Si es edici贸n o si es nueva tarea\r\n       /* if(tareaseleccionada === null ) {\r\n            // agregar la nueva tarea al state de tareas\r\n            tarea.proyecto = proyectoActual._id;\r\n            agregarTarea(tarea);\r\n        } else {\r\n            // actualizar tarea existente\r\n            actualizarTarea(tarea);\r\n\r\n            // Elimina tareaseleccionada del state\r\n            limpiarTarea();\r\n        }\r\n        // Obtener y filtrar las tareas del proyecto actual\r\n        obtenerTareas(proyectoActual.id);\r\n*/\r\n        // reiniciar el form\r\n        guardarTarea({\r\n            nombre: ''\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"formulario\">\r\n            <form\r\n                onSubmit={onSubmit}\r\n            >\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"input-text\"\r\n                        placeholder=\"Nombre Tarea...\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-submit btn-block\"\r\n                        \r\n                    />\r\n                </div>\r\n            </form>\r\n\r\n           \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default FormTarea;"]},"metadata":{},"sourceType":"module"}